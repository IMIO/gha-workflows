name: Test package (legacy)

on:
  workflow_call:
    inputs:
      buildout_command:
        description: 'Command to run buildout'
        type: string
        required: false
        default: "bin/buildout"
      buildout_config_file:
        description: 'Buildout configuration file'
        type: string
        required: false
        default: "buildout.cfg"
      continue_on_error:
        description: 'Continue on error'
        type: boolean
        required: false
        default: false
      matrix_experimental:
        description: 'Experimental matrix'
        type: boolean
        required: false
        default: false
      plone_version:
        description: 'Plone version'
        type: string
        required: false
        default: "4.3"
      python_version:
        description: 'Python version'
        required: false
        type: string
        default: "2.7"
      requirements_file:
        description: 'Requirements file'
        type: string
        required: false
        default: "requirements.txt"
      runner_label:
        description: 'Runner label'
        type: string
        required: false
        default: "ubuntu-latest"
      soffice:
        description: 'Launch soffice'
        required: false
        type: boolean
        default: false
      test_command:
        description: 'Test command'
        required: false
        type: string
        default: 'bin/test'
    secrets:
        mattermost_webhook_url:
          description: 'Webhook URL to send notifications on Mattermost, if not provided, notifications will not be sent'
          required: false

jobs:
  test:
    runs-on: ${{ inputs.runner_label }}
    continue-on-error: ${{ inputs.continue_on_error }}
    if: ${{ !github.event_name == 'pull_request' || !github.event.pull_request.draft }}
    steps:
      - name: Launch soffice
        if: ${{ inputs.soffice }}
        run: soffice '--accept=socket,host=0.0.0.0,port=2002;urp;StarOffice.ServiceManager' --nologo --headless --nofirststartwizard --norestore &
        shell: bash
      - name: Run tests
        uses: IMIO/gha/plone-package-test-notify@v4
        env:
          cache-name: cache-eggs
        with:
          BUILDOUT_CONFIG_FILE: ${{ inputs.buildout_config_file }}
          CACHE_KEY: ${{ runner.os }}-build-${{ env.cache-name }}-${{ inputs.python_version }}
          INSTALL_DEPENDENCIES_COMMANDS: |
            sudo pip install -r ${{ inputs.requirements_file }}
          MATTERMOST_WEBHOOK_URL: ${{ secrets.mattermost_webhook_url }}
          TEST_COMMAND: ${{ inputs.test_command }}