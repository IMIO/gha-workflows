name: Promote staging to production
# This workflow promotes a Docker image from staging to production and deploys it using Rundeck.
# It tags the image in the registry and notifies via Mattermost.
# It also runs a Rundeck job to deploy the image to the specified node.
on:
  workflow_call:
    inputs:
      github_environment:
        description: 'GitHub environment to use for the job'
        type: string
        required: false
        default: 'production'
      image_name:
        description: 'Name of the Docker image'
        type: string
        required: true
      image_tag_staging:
        description: 'Tag of the Docker image in staging'
        type: string
        required: true
      image_tag_production:
        description: 'Tag of the Docker image in production'
        type: string
        required: true
      rundeck_job_id:
        description: 'ID of the Rundeck job to run for deployment'
        type: string
        required: true
      node_name:
        description: 'Name of the node to deploy to'
        type: string
        required: true
      runner_label:
        description: 'Label for the GitHub runner to use'
        type: string
        required: false
        default: gha-runners
      schedule_time:
        description: 'Time to schedule the deployment tomorrow (e.g., "03:00")'
        type: string
        required: false
        default: '03:00'
      service_name:
        description: 'Name of the service being deployed'
        type: string
        required: true
    secrets:
      mattermost_webhook_url:
        description: 'Webhook URL for Mattermost notifications'
        required: false
      registry_url:
        description: 'URL of the registry'
        required: true
      registry_username:
        description: 'Username for the registry'
        required: true
      registry_password:
        description: 'Password for the registry'
        required: true
      rundeck_url:
        description: 'URL of the Rundeck server'
        required: true
      rundeck_token:
        description: 'Token for the Rundeck server'
        required: true

jobs:
  tag:
    environment:
      name: ${{ inputs.github_environment }}
    runs-on: ${{ inputs.runner_label }}
    steps:
      - name: Tag and notify
        uses: IMIO/gha/tag-notify@v5
        with:
          IMAGE_NAME: ${{ inputs.image_name }}
          IMAGE_TAG: ${{ inputs.image_tag_staging }}
          NEW_IMAGE_TAGS: |
            ${{ inputs.image_tag_production }}
          REGISTRY_URL: ${{ secrets.registry_url }}
          REGISTRY_USERNAME: ${{ secrets.registry_username }}
          REGISTRY_PASSWORD: ${{ secrets.registry_password }}
          MATTERMOST_WEBHOOK_URL: ${{ secrets.mattermost_webhook_url }}
  deploy:
    environment:
      name: ${{ inputs.github_environment }}
    runs-on: ${{ inputs.runner_label }}
    needs: [tag]
    steps:
      - name: Get tomorrow date
        run: echo "DEPLOY_DATE=$(date --date='${{ inputs.schedule_time }} tomorrow' +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_ENV
      - name: Deploy to production and notify (tonight)
        if: endsWith(github.ref, '-quick') == false
        uses: IMIO/gha/rundeck-notify@v5
        with:
          RUNDECK_URL: ${{ secrets.rundeck_url }}
          RUNDECK_TOKEN: ${{ secrets.rundeck_token }}
          RUNDECK_JOB_ID: ${{ inputs.rundeck_job_id }}
          RUNDECK_PARAMETERS: '-F "runAtTime=${{ env.DEPLOY_DATE }}" -F "filter=name ${{ inputs.node_name }}" -F "option.tag=${{ inputs.image_tag_production }}" -F "option.image_name=${{ inputs.image_name }}" -F "option.service_name=${{ inputs.service_name }}"'
          MATTERMOST_WEBHOOK_URL: ${{ secrets.mattermost_webhook_url }}
      - name: Deploy to production and notify (now - quick release)
        if: endsWith(github.ref, '-quick')
        uses: IMIO/gha/rundeck-notify@v5
        with:
          RUNDECK_URL: ${{ secrets.rundeck_url }}
          RUNDECK_TOKEN: ${{ secrets.rundeck_token }}
          RUNDECK_JOB_ID: ${{ inputs.rundeck_job_id }}
          RUNDECK_PARAMETERS: '-F "filter=name ${{ inputs.node_name }}" -F "option.tag=${{ inputs.image_tag_production }}" -F "option.image_name=${{ inputs.image_name }}" -F "option.service_name=${{ inputs.service_name }}"'
          MATTERMOST_WEBHOOK_URL: ${{ secrets.mattermost_webhook_url }}
